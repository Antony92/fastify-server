generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics", "fullTextSearch", "multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  ADMIN
}

enum ServerEventType {
  info
  warning
  error
}

model User {
  id                             String                  @id @default(uuid())
  name                           String
  username                       String                  @unique()
  roles                          Role[]                  @default([GUEST])
  active                         Boolean                 @default(true)
  blocked                        Boolean                 @default(false)
  created                        DateTime                @default(now())
  updated                        DateTime                @updatedAt()
  internal                       Boolean                 @default(false)
  lastLogin                      DateTime?
  apiKey                         ApiKey?
}

model ApiKey {
  id      String   @id @default(uuid())
  jti     String   @unique()
  jwt     String   @unique()
  created DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String   @unique()
}

model AuditLog {
  id           String   @id @default(uuid())
  username     String
  name         String
  action       String
  target       String
  data         Json
  message      String?
  impersonated String?
  created      DateTime @default(now())
}

model ServerEvent {
  id      String          @id @default(uuid())
  type    ServerEventType @default(info)
  message String
  created DateTime        @default(now())
  updated DateTime        @updatedAt()
}

model Feedback {
  id           String   @id @default(uuid())
  email        String
  name         String
  satisfaction Int
  message      String
  created      DateTime @default(now())
}
